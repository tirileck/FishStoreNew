// <auto-generated />
using System;
using FishStore.EF.Contextst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FishStore.Migrations
{
    [DbContext(typeof(BaseContext))]
    partial class BaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FishStore.Entities.BaseObject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("ID");

                    b.ToTable("BaseObjects");
                });

            modelBuilder.Entity("FishStore.Entities.DictObject", b =>
                {
                    b.HasBaseType("FishStore.Entities.BaseObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DictObjects");
                });

            modelBuilder.Entity("FishStore.Entities.TypeObject", b =>
                {
                    b.HasBaseType("FishStore.Entities.BaseObject");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TypeObjects");
                });

            modelBuilder.Entity("FishStore.Entities.Products.ProductDicts.TypeOfBait", b =>
                {
                    b.HasBaseType("FishStore.Entities.DictObject");

                    b.ToTable("TypesOfBait");
                });

            modelBuilder.Entity("FishStore.Entities.Products.ProductDicts.TypeOfClothing", b =>
                {
                    b.HasBaseType("FishStore.Entities.DictObject");

                    b.ToTable("TypesOfClothing");
                });

            modelBuilder.Entity("FishStore.Entities.Products.ProductDicts.TypeOfRod", b =>
                {
                    b.HasBaseType("FishStore.Entities.DictObject");

                    b.ToTable("TypesOfRod");
                });

            modelBuilder.Entity("FishStore.Entities.Products.ProductObject", b =>
                {
                    b.HasBaseType("FishStore.Entities.TypeObject");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.ToTable("ProductObjects");
                });

            modelBuilder.Entity("FishStore.Entities.Products.Bait", b =>
                {
                    b.HasBaseType("FishStore.Entities.Products.ProductObject");

                    b.Property<int>("TypeOfBaitID")
                        .HasColumnType("int");

                    b.HasIndex("TypeOfBaitID");

                    b.ToTable("Baits");
                });

            modelBuilder.Entity("FishStore.Entities.Products.Clothing", b =>
                {
                    b.HasBaseType("FishStore.Entities.Products.ProductObject");

                    b.Property<int>("TypeOfClothingID")
                        .HasColumnType("int");

                    b.HasIndex("TypeOfClothingID");

                    b.ToTable("Clothings");
                });

            modelBuilder.Entity("FishStore.Entities.Products.Rod", b =>
                {
                    b.HasBaseType("FishStore.Entities.Products.ProductObject");

                    b.Property<int>("TypeOfRodID")
                        .HasColumnType("int");

                    b.HasIndex("TypeOfRodID");

                    b.ToTable("Rods");
                });

            modelBuilder.Entity("FishStore.Entities.DictObject", b =>
                {
                    b.HasOne("FishStore.Entities.BaseObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.DictObject", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishStore.Entities.TypeObject", b =>
                {
                    b.HasOne("FishStore.Entities.BaseObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.TypeObject", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishStore.Entities.Products.ProductDicts.TypeOfBait", b =>
                {
                    b.HasOne("FishStore.Entities.DictObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.Products.ProductDicts.TypeOfBait", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishStore.Entities.Products.ProductDicts.TypeOfClothing", b =>
                {
                    b.HasOne("FishStore.Entities.DictObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.Products.ProductDicts.TypeOfClothing", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishStore.Entities.Products.ProductDicts.TypeOfRod", b =>
                {
                    b.HasOne("FishStore.Entities.DictObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.Products.ProductDicts.TypeOfRod", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishStore.Entities.Products.ProductObject", b =>
                {
                    b.HasOne("FishStore.Entities.TypeObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.Products.ProductObject", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishStore.Entities.Products.Bait", b =>
                {
                    b.HasOne("FishStore.Entities.Products.ProductObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.Products.Bait", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("FishStore.Entities.Products.ProductDicts.TypeOfBait", "TypeOfBait")
                        .WithMany()
                        .HasForeignKey("TypeOfBaitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfBait");
                });

            modelBuilder.Entity("FishStore.Entities.Products.Clothing", b =>
                {
                    b.HasOne("FishStore.Entities.Products.ProductObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.Products.Clothing", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("FishStore.Entities.Products.ProductDicts.TypeOfClothing", "TypeOfClothing")
                        .WithMany()
                        .HasForeignKey("TypeOfClothingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfClothing");
                });

            modelBuilder.Entity("FishStore.Entities.Products.Rod", b =>
                {
                    b.HasOne("FishStore.Entities.Products.ProductObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.Products.Rod", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("FishStore.Entities.Products.ProductDicts.TypeOfRod", "TypeOfRod")
                        .WithMany()
                        .HasForeignKey("TypeOfRodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfRod");
                });
#pragma warning restore 612, 618
        }
    }
}
