// <auto-generated />
using System;
using FishStore.EF.Contextst;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FishStore.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20211207184354_AddBaseObgects")]
    partial class AddBaseObgects
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("FishStore.Entities.BaseObject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("ID");

                    b.ToTable("BaseObjects");
                });

            modelBuilder.Entity("FishStore.Entities.DictObject", b =>
                {
                    b.HasBaseType("FishStore.Entities.BaseObject");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DictObjects");
                });

            modelBuilder.Entity("FishStore.Entities.TypeObject", b =>
                {
                    b.HasBaseType("FishStore.Entities.BaseObject");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TypeObjects");
                });

            modelBuilder.Entity("FishStore.Entities.DictObject", b =>
                {
                    b.HasOne("FishStore.Entities.BaseObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.DictObject", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FishStore.Entities.TypeObject", b =>
                {
                    b.HasOne("FishStore.Entities.BaseObject", null)
                        .WithOne()
                        .HasForeignKey("FishStore.Entities.TypeObject", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
